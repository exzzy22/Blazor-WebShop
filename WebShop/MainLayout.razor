@using System.Globalization;
@inherits LayoutComponentBase
@implements IDisposable

<CascadingValue Value="User">
<Header/>
<main>
    @Body
</main>
<Newsletter/>
<Footer/>
</CascadingValue>

@code{
	[Inject]
	UserState UserState { get; set; } = null!;
	[Inject]
	AuthenticationStateProvider AuthenticationState { get; set; } = null!;
	public ClaimsPrincipal User { get; set; } = null!;


	protected override async Task OnInitializedAsync()
	{
		AuthenticationState.AuthenticationStateChanged += OnAuthenticationStateChanged;
		var authState = await AuthenticationState.GetAuthenticationStateAsync();
		User = authState.User;
		await UserState.TryLoadData();
	}

	private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
	{
		User = (await task).User;
	}

	void IDisposable.Dispose()
	{
		AuthenticationState.AuthenticationStateChanged -= OnAuthenticationStateChanged;
	}
}