@page "/profile"
@using Microsoft.AspNetCore.Components.Authorization;

<EditForm Model="Model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
<!-- SECTION -->
<div class="section">
    <!-- container -->
    <div class="container">
        <!-- row -->
        <div class="row">
                <div class="col-md-4">
                    <div id="profile-menu" class="list-group">
                        <button class="list-group-item list-group-item-action">Item 1</button>
                        <button class="list-group-item list-group-item-action active">Item 1</button>
                        <button class="list-group-item list-group-item-action">Item 1</button>
                        <button class="list-group-item list-group-item-action">Item 1</button>
                    </div>
                </div>
            <div class="col-md-4">
                <div class="register">
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.FirstName" Placeholder="First Name" />
                        <ValidationMessage For="() => Model.FirstName" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.Email" Placeholder="Email" />
                        <ValidationMessage For="() => Model.Email" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.Address" Placeholder="Address" />
                        <ValidationMessage For="() => Model.Address" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.Country" Placeholder="Country" />
                        <ValidationMessage For="() => Model.Country" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.PhoneNumber" Placeholder="Telephone" />
                        <ValidationMessage For="() => Model.PhoneNumber" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="register">
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.LastName" Placeholder="Last Name" />
                        <ValidationMessage For="() => Model.LastName" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.City" Placeholder="City" />
                        <ValidationMessage For="() => Model.City" />
                    </div>
                    <div class="form-group">
                        <InputText class="input" @bind-Value="@Model.ZipCode" Placeholder="ZIP Code" />
                        <ValidationMessage For="() => Model.ZipCode" />
                    </div>
                    <div class="text-center" style="padding-top:2em">
                        <button type="submit" class="primary-btn d-block mx-auto">Save</button>
                    </div>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
        <!-- /row -->
    </div>
    <!-- /container -->
</div>
</EditForm>

@code {
    UserVM Model { get; set; } = new();
    [Inject]
    IApiService ApiService { get; set; } = null!;
    [Inject]
    UserState UserState { get; set; } = null!;
    [Inject]
    NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        if (UserState.User is null)
            NavigationManager.NavigateTo("/");

        Model = UserState.User;
    }

    async Task OnValidSubmit()
    {
        bool result = await ApiService.UpdateUser(Model);
    }
}
