<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">

			<!-- section title -->
			<div class="col-md-12">
				<div class="section-title">
					<h3 class="title">@Title</h3>
					<div class="section-nav">
						<ul class="section-tab-nav tab-nav">
							<li class="active"><a data-toggle="tab" href="#tab1">Laptops</a></li>
							<li><a data-toggle="tab" href="#tab1">Smartphones</a></li>
							<li><a data-toggle="tab" href="#tab1">Cameras</a></li>
							<li><a data-toggle="tab" href="#tab1">Accessories</a></li>
						</ul>
					</div>
				</div>
			</div>
			<!-- /section title -->
			<!-- Products tab & slick -->
			<div class="col-md-12">
				<div class="row">
					<div class="products-tabs">
						<!-- tab -->
						<div id="tab1" class="tab-pane active">
							<div class="products-slick" data-nav="#@guid">
							@foreach(var product in Products)
							{
								<ProductCard Product="product" />
							}
							</div>
							<div id="@guid" class="products-slick-nav"></div>
						</div>
						<!-- /tab -->
					</div>
				</div>
			</div>
			<!-- Products tab & slick -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->

@code
{
	[Inject]
	public IJSRuntime JS { get; set; }
	[Parameter]
	public List<ProductVM> Products { get; set; }
	[Parameter]
	public string Title { get; set; }
	private Guid guid = Guid.NewGuid();


	protected override async Task OnInitializedAsync()
	{
		//Products = await ApiService.GetProductsAsync();
	}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine($"{this.ToString()} OnAfterRenderAsync");
		//Console.WriteLine($"Products count {Products.Count}");
		if(Products is not null && Products?.Count>0)
			await JS.InvokeAsync<IJSObjectReference>("import", "/js/main.js");
    }
}