<!-- HEADER -->
<header>
	<!-- TOP HEADER -->
	<div id="top-header">
		<div class="container">
			<ul class="header-links pull-left">
				<li><a href="#"><i class="fa fa-phone"></i> +021-95-51-84</a></li>
				<li><a href="#"><i class="fa fa-envelope-o"></i> email@email.com</a></li>
				<li><a href="#"><i class="fa fa-map-marker"></i> 1734 Stonecoal Road</a></li>
			</ul>
			<ul class="header-links pull-right">
				<li><a href="#"><i class="fa fa-dollar"></i> USD</a></li>
				<li><a href="#"><i class="fa fa-user-o"></i> My Account</a></li>
			</ul>
		</div>
	</div>
	<!-- /TOP HEADER -->
	<!-- MAIN HEADER -->
	<div id="header">
		<!-- container -->
		<div class="container">
			<!-- row -->
			<div class="row">
				<!-- LOGO -->
				<div class="col-md-3">
					<div class="header-logo">
						<a href="#" class="logo">
							<img src="./img/logo.png" alt="">
						</a>
					</div>
				</div>
				<!-- /LOGO -->
				<!-- SEARCH BAR -->
				<div class="col-md-6">
					<div class="header-search">
						<form>
							<select class="input-select">
								<option value="0">All Categories</option>
								<option value="1">Category 01</option>
								<option value="1">Category 02</option>
							</select>
							<input class="input" placeholder="Search here">
							<button class="search-btn">Search</button>
						</form>
					</div>
				</div>
				<!-- /SEARCH BAR -->
				<!-- ACCOUNT -->
				<div class="col-md-3 clearfix">
					<div class="header-ctn">
						<!-- Wishlist -->
						<div>
							<a href="#">
								<i class="fa fa-heart-o"></i>
								<span>Your Wishlist</span>
								<div class="qty">2</div>
							</a>
						</div>
						<!-- /Wishlist -->
						<!-- Cart -->
						<div class="dropdown">
							<a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="true">
								<i class="fa fa-shopping-cart"></i>
								<span>Your Cart</span>
								<div class="@(Cart.Products.Count > 0 ? "qty" : "qty hide")">@(Cart.Products.Sum(p => p.Quantity))</div>
							</a>
							<div class="cart-dropdown" @onclick:preventDefault="true" @onclick:stopPropagation="true">
								<div class="cart-list">
									@foreach (var product in Cart.Products)
									{
										<div class="product-widget">
											<div class="product-img">
												<img src="@(Configuration.ApiImageAddress + product.Product.Images.First(i => i.MainImage).File)" alt="Product Image">
											</div>
											<div class="product-body">
												<h3 class="product-name"><a href="#">@product.Product.ShortName</a></h3>
												<h4 class="product-price"><span class="qty">@(product.Quantity)x</span>$@product.Product.Prices.First().Value</h4>
											</div>
											<button class="delete" @onclick="async () => await UserState.RemoveFromCart(product.ProductId)"><i class="fa fa-close"></i></button>
										</div>
									}
								</div>
								<div class="cart-summary">
									<small>@(Cart.Products.Sum(p => p.Quantity)) Item(s) selected</small>
									<h5>SUBTOTAL: $2940.00</h5>
								</div>
								<div class="cart-btns">
									<a href="#">View Cart</a>
									<a href="#">Checkout  <i class="fa fa-arrow-circle-right"></i></a>
								</div>
							</div>
						</div>
						<!-- /Cart -->
						<!-- Menu Toogle -->
						<div class="menu-toggle">
							<a href="#">
								<i class="fa fa-bars"></i>
								<span>Menu</span>
							</a>
						</div>
						<!-- /Menu Toogle -->
					</div>
				</div>
				<!-- /ACCOUNT -->
			</div>
			<!-- row -->
		</div>
		<!-- container -->
	</div>
	<!-- /MAIN HEADER -->
</header>
<!-- /HEADER -->

@code {
	CartVM Cart { get; set; } = null!;
	[Inject]
	IJSRuntime JS { get; set; } = null!;
	[Inject]
	UserState UserState { get; set; } = null!;
	[Inject]
	WebShopConfiguration Configuration { get; set; } = null!;


	protected override void OnInitialized()
	{
		Cart = UserState.Cart;
		UserState.PropertyChanged += PropertyChanged;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		//await JS.InvokeVoidAsync("HeaderListeners");
	}

	private void PropertyChanged(object? sender, PropertyChangedEventArgs e)
	{
		Cart = UserState.Cart;
		InvokeAsync(StateHasChanged);
	}
}
