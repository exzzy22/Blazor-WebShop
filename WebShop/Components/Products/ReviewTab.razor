<div class="row">
	<Rating MetaData="(ReviewMetaData)Reviews.MetaData" TotalRating="Reviews.Items.Sum(r => r.StarRating)" />
	<!-- Reviews -->
	<div class="col-md-6">
		<div id="reviews">
			<ul class="reviews">
				@if (Reviews is not null)
				{
					foreach (var review in Reviews.Items)
					{
						<ReviewCard Review="review" />
					}
				}
			</ul>
			@if (Reviews is not null && Reviews.MetaData.TotalPages > 1)
			{
				<ul class="reviews-pagination">
					@if (Reviews.MetaData.HasPrevious)
					{
						<li><a @onclick="async () => await GoToPage(Reviews.MetaData.CurrentPage -1)"><i class="fa fa-angle-left"></i></a></li>
					}
					@foreach (var pageNum in Reviews.GetPagesToShow())
					{
						if (pageNum == Reviews.MetaData.CurrentPage)
						{
							<li class="active">@pageNum</li>
						}
						else
						{
							<li><a @onclick="async () => await GoToPage(pageNum)">@pageNum</a></li>
						}
					}
					@if (Reviews.MetaData.HasNext)
					{
						<li><a @onclick="async () => await GoToPage(Reviews.MetaData.CurrentPage +1)"><i class="fa fa-angle-right"></i></a></li>
					}
				</ul>
			}
		</div>
	</div>
	<!-- /Reviews -->
	<!-- Review Form -->
	<div class="col-md-3">
		<div id="review-form">
			<form class="review-form">
				<input class="input" type="text" placeholder="Your Name">
				<input class="input" type="email" placeholder="Your Email">
				<textarea class="input" placeholder="Your Review"></textarea>
				<div class="input-rating">
					<span>Your Rating: </span>
					<div class="stars">
						<input id="star5" name="rating" value="5" type="radio"><label for="star5"></label>
						<input id="star4" name="rating" value="4" type="radio"><label for="star4"></label>
						<input id="star3" name="rating" value="3" type="radio"><label for="star3"></label>
						<input id="star2" name="rating" value="2" type="radio"><label for="star2"></label>
						<input id="star1" name="rating" value="1" type="radio"><label for="star1"></label>
					</div>
				</div>
				<button class="primary-btn">Submit</button>
			</form>
		</div>
	</div>
	<!-- /Review Form -->
</div>

@code {
	[Parameter]
	public PagedList<ReviewVM> Reviews { get; set; } = null!;
	[Parameter]
	public int ProductId { get; set; }
	[Inject]
	IApiService ApiService { get; set; } = null!;

	async Task GoToPage(int pageNumber) => Reviews = await ApiService.GetReviews(new ReviewParameters { PageNumber = pageNumber, PageSize = 3, ProductId = ProductId });

}
